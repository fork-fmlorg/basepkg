#!/bin/sh
# valiables

: ${SRC:=/usr/src}
: ${OBJ:=/usr/obj}
: ${PKGSRC:=/usr/pkgsrc}
: ${PACKAGES:=./packages}
host="$(hostname)"
machine="$(uname -m)"
machine_arch="$(uname -p)"
opsys="$(uname)"
osversion="$(uname -r)"
pkgtoolversion=""
prog="${0##*/}"
rcsid='$NetBSD: make_basepkg.sh,v 0.01 2016/10/19 15:36:22 enomoto Exp $'
utcdate="$(env TZ=UTC LOCALE=C date '+%Y-%m-%d %H:%M')"
user="${USER:-root}"
sets="${OBJ}/releasedir/${machine}/binary/sets"

if [ -f ${PKGSRC}/pkgtools/pkg_install/files/lib/version.h ]; then
	pkgtoolversion="$(awk '/PKGTOOLS_VERSION/ {print $3}' \
	${PKGSRC}/pkgtools/pkg_install/files/lib/version.h)"
else
	pkgtoolversion="20160410"
fi

# functions

make_list(){
	for i in "$@"
	do
  	echo "making $i package contents list..."
		if [ ! -d ./work/list ]; then
			mkdir -p ./work/list
		fi	
		find work/$i -type f | grep -v "mtree" | \
  	grep -v "obsolete" | sed "s/^work\/$i\///g" > work/list/file.$i
	done
}

split_base_list(){
	awk '$1 ~ /^bin\// {print $1}' ./work/list/file.base > ./work/list/file.base-bin
	awk '$1 ~ /^etc\// {print $1}' ./work/list/file.base > ./work/list/file.release
	awk '$1 ~ /^lib\// {print $1}' ./work/list/file.base > ./work/list/file.base-lib
	awk '$1 ~ /^libdata\// {print $1}' ./work/list/file.base > ./work/list/file.base-libdata
	awk '$1 ~ /^libexec\// {print $1}' ./work/list/file.base > ./work/list/file.base-libexec
	awk '$1 ~ /^rescue\// {print $1}' ./work/list/file.base > ./work/list/file.rescue
	awk '$1 ~ /^sbin\// {print $1}' ./work/list/file.base > ./work/list/file.base-sbin
	awk '$1 ~ /^usr\/bin\// {print $1}' ./work/list/file.base >> ./work/list/file.base-bin
	awk '$1 ~ /^usr\/lib\// {print $1}' ./work/list/file.base >> ./work/list/file.base-libexec
	awk '$1 ~ /^usr\/mdec\// {print $1}' ./work/list/file.base > ./work/list/file.mdec
	awk '$1 ~ /^usr\/sbin\// {print $1}' ./work/list/file.base >> ./work/list/file.base-sbin
	awk '$1 ~ /^usr\/share\// {print $1}' ./work/list/file.base > ./work/list/file.shares
}

make_BUILD_INFO(){
	for i in "$@"
	do
  	echo "making $i package build infomation..."
		echo "OPSYS=$opsys" > ./work/$i/+BUILD_INFO
		echo "OS_VERSION=$osversion" >> ./work/$i/+BUILD_INFO
		echo "OBJECT_FMT=ELF" >> ./work/$i/+BUILD_INFO
		echo "MACHINE_ARCH=$machine_arch" >> ./work/$i/+BUILD_INFO
		echo "MACHINE_GNU_ARCH=${MACHINE_GNU_ARCH}" >> ./work/$i/+BUILD_INFO
		echo "PKGTOOLS_VERSION=$pkgtoolversion" >> ./work/$i/+BUILD_INFO
	done
}

make_COMMENT(){
	for i in "$@"
	do
  	echo "making $i package comment..."
		echo "System Package for $i" > ./work/$i/+COMMENT
	done
}

make_CONTENTS(){
	for i in "$@"
	do
  	echo "making $i package contents from list..."
		echo "@name $i-`sh ${SRC}/sys/conf/osrelease.sh`" > work/$i/+CONTENTS
		echo "@comment Packaged at ${utcdate} UTC by ${user}@${host}" \
		>> ./work/$i/+CONTENTS
		echo "@comment Packaged using ${prog} ${rcsid}" >> ./work/$i/+CONTENTS
		echo "@cwd /" >> ./work/$i/+CONTENTS
		cat ./work/list/file.$i | grep -v '+[A-Z]' >> ./work/$i/+CONTENTS
	done
}

make_DESC(){
	for i in "$@"
	do
  	echo "making $i package description..."
		echo "NetBSD base system" > work/$i/+DESC
		echo "" >> work/$i/+DESC
		echo "Homepage:" >> work/$i/+DESC
		echo "http://www.netbsd.org/" >> work/$i/+DESC
	done
}

make_PKG(){
	for i in "$@"
	do
  	echo "making $i package using pkg_create..."
		pkg_create -l -U -B work/$i/+BUILD_INFO -c work/$i/+COMMENT \
		-d work/$i/+DESC -f work/$i/+CONTENTS -I / -p ${PWD}/work/$i work/$i 
  	mv work/$i.tgz ./${PACKAGES}/$i.tgz
	done
}

clean_plus_file(){
	for i in "$@"
	do
		if [ -f work/$1/+BUILD_INFO ]; then
			rm -f work/$1/+BUILD_INFO
		fi
		if [ -f work/$1/+CONTENTS ]; then
			rm -f work/$1/+CONTENTS
		fi
		if [ -f work/$1/+COMMENT ]; then
			rm -f work/$1/+COMMENT
		fi
		if [ -f work/$1/+DESC ]; then
			rm -f work/$1/+DESC
		fi
	done
}

